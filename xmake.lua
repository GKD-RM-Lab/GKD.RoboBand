add_rules("plugin.compile_commands.autoupdate", { outputdir = "build" })
add_rules("mode.debug", "mode.releasedbg", "mode.release")
set_policy("build.warning", true)
set_warnings("allextra", "pedantic")

if is_mode("debug") then
    add_cxxflags("-ftrapv")
    add_cxxflags("-Wnull-dereference")
    add_cxxflags("-Wformat-security")
    add_cxxflags("-Wimplicit-fallthrough")
    add_cxxflags("-Wsign-conversion")
    add_cxxflags("-Wconversion")
    add_cxxflags("-Wfloat-equal")
    add_cxxflags("-Wcast-qual")
    add_cxxflags("-Wcast-align")
    add_cxxflags("-Wstrict-aliasing=2")
    add_cxxflags("-Wundef")
    add_cxxflags("-Wmissing-include-dirs")
    add_cxxflags("-Winvalid-pch")
    add_cxxflags("-Wstack-protector")
    add_cxxflags("-Wpacked")
    add_cxxflags("-Wmissing-noreturn")
    add_cxxflags("-Wshadow")
    add_cxxflags("-Wswitch-enum")
    add_cxxflags("-Wunused")
    add_cxxflags("-Wunused-parameter")
    add_cxxflags("-Wmissing-field-initializers")
    add_cxxflags("-Wformat=2")
    add_cxxflags("-Wformat-nonliteral")
    add_cxxflags("-Wmissing-format-attribute")
    add_cxxflags("-Wdisabled-optimization")
    add_cxxflags("-Wstrict-overflow=5")
    add_cxxflags("-Wdouble-promotion")
    add_cxxflags("-Wmissing-declarations")
    add_cxxflags("-Wwrite-strings")
    add_cxxflags("-Wno-pre-c++23-compat")
end

target("src")
    set_kind("static")
    add_files("src/*.mpp", { public = true })
    set_languages("cxx26")
    set_policy("build.c++.modules", true)

target("test")
    set_kind("binary")
    add_deps("src")
    add_files("app/test/*.cc")
    set_languages("cxx26")
    set_policy("build.c++.modules", true)

