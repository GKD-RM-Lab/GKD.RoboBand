module;

#include <webots/inertial_unit.h>
#include <webots/gyro.h>
#include <webots/accelerometer.h>
#include <webots/robot.h>

export module robo:dev.imu.webots;

import std;
import :dev.imu.base;
import :io;
import :support.task_context;
namespace stdv = std::views;

export namespace robo {
namespace imu {
class Webots : public dev::Imu {
public:
    struct Info {
        using dev_type = Webots;

        std::string_view inertial_unit_name;
        std::string_view gyro_name;
        std::string_view accelerometer_name;
        // TODO install_angle
    };

private:
    ::WbDeviceTag inertial_unit_tag_;
    ::WbDeviceTag gyro_tag_;
    ::WbDeviceTag accelerometer_tag_;

public:
    explicit Webots(const Info& info) :
        Imu { std::chrono::nanoseconds::max() },
        inertial_unit_tag_ { spt::webots(wb_robot_get_device, std::string{info.inertial_unit_name}.c_str()) },
        gyro_tag_ { spt::webots(wb_robot_get_device, std::string{info.gyro_name}.c_str()) },
        accelerometer_tag_ { spt::webots(wb_robot_get_device, std::string{info.accelerometer_name}.c_str()) } {
        spt::webots(wb_inertial_unit_enable, inertial_unit_tag_, static_cast<int>(spt::webots.basic_time_step()));
        spt::webots(wb_gyro_enable, gyro_tag_, static_cast<int>(spt::webots.basic_time_step()));
        spt::webots(wb_accelerometer_enable, accelerometer_tag_, static_cast<int>(spt::webots.basic_time_step()));
        spt::task_context::add_task(spt::task_context::webots::type::update, [this] {
            auto angle_temp = spt::webots(wb_inertial_unit_get_roll_pitch_yaw, inertial_unit_tag_);
            auto gyro_temp = spt::webots(wb_gyro_get_values, gyro_tag_);
            auto acc_temp = spt::webots(wb_accelerometer_get_values, accelerometer_tag_);
            for (auto i : stdv::iota(0uz, 3uz)) {
                angle_[i] = static_cast<float>(angle_temp[i]);
                gyro_[i] = static_cast<float>(gyro_temp[i]);
                acc_[i] = static_cast<float>(acc_temp[i]);
            }
        });
    }
};
} // namespace imu
} // namespace robo

